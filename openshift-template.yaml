apiVersion: v1
kind: Template
labels:
  template: jboss-amq-app-demo
metadata:
  annotations:
    openshift.io/display-name: Openshift Jboss A-MQ application demo
    description: >-
      A sample application that shows the workflow of Jboss A-MQ   
    tags: 'jboss-amq-app-demo'
  name: jboss-amq-app-demo
parameters:
  - name: NAME
    description: The name of the application
    displayName: Name
    required: true
    value: eap-app
  - name: SOURCE_REPOSITORY_URL
    description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    required: true
    value: 'https://github.com/jboss-developer/jboss-eap-quickstarts.git'
  - name: SOURCE_REPOSITORY_REF
    description: Set the branch name if you are not using master branch
    displayName: Git Reference    
    value: 6.4.x
    required: false
  - name: CONTEXT_DIR
    description: >-
      Set this to the relative path to your project if it is not in the root of
      your repository.
    displayName: Context Directory
    value: helloworld-mdb


    
objects:
  - kind: BuildConfig
    apiVersion: v1    
    metadata:
      annotations:
        description: Defines how to build the application
      name: '${NAME}-build'
    spec:
      source:
        type: Git
        git:
          ref: '${SOURCE_REPOSITORY_REF}'
          uri: '${SOURCE_REPOSITORY_URL}'
        contextDir: '${CONTEXT_DIR}'
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile.build
      output:
        to:
          kind: ImageStreamTag
          name: '${NAME}:latest'

  - kind: ImageStream
    apiVersion: v1    
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: '${NAME}-build'

  - kind: BuildConfig
    apiVersion: v1    
    metadata:
      annotations:
        description: Defines how to build the application
      name: '${NAME}'
    spec:
      source:
        type: Git
        git:
          ref: '${SOURCE_REPOSITORY_REF}'
          uri: '${SOURCE_REPOSITORY_URL}'
        contextDir: '${CONTEXT_DIR}'
        images: 
          - from: 
              kind: ImageStreamTag
              name: '${NAME}-build:latest'
            paths:          
              - destinationDir: app
                sourcePath: /app/deployments 
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile
      output:
        to:
          kind: ImageStreamTag
          name: '${NAME}:latest'

  - kind: ImageStream
    apiVersion: v1    
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: '${NAME}'      

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${NAME}'
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - eap-app
            from:
              kind: ImageStreamTag
              name: '${NAME}:latest'
        - type: ConfigChange
      replicas: 1
      selector:
        name: '${NAME}'
      template:
        metadata:
          name: '${NAME}'
          labels:
            name: '${NAME}'
        spec:
          containers:
            - name: eap-app
              image: '${NAME}:latest'
              env: 
                - name: KAFKA_SERVICE_NAME
                  value: '${KAFKA_SERVICE_NAME}'
                - name: MQ_SERVICE_PREFIX_MAPPING
                  value: eap-app-amq=MQ
                - name: MQ_JNDI
                  value: java:/ConnectionFactory
                - name: MQ_USERNAME
                  value: admin                 
                - name: MQ_PASSWORD
                  value: admin                  
                - name: MQ_PROTOCOL
                  value: tcp
                - name: MQ_QUEUES
                  value: HELLOWORLDMDBQueue
                - name: MQ_TOPICS
                  value: HELLOWORLDMDBTopic              

  - kind: Service
    apiVersion: v1
    metadata:
      annotations:
        description: Exposing the EAP app
      name: '${NAME}'
    spec:
      ports:
        - name: web
          port: 8080
          targetPort: 8080
      selector:
        name: '${NAME}'

  - kind: Route
    apiVersion: v1    
    metadata:
      name: '${NAME}'
    spec:
      to:
        kind: Service
        name: '${NAME}'